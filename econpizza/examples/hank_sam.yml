# Authors: Andreas Koundouros [a.koundouros@fu-berlin.de] & Gregor Boehl
# HANK structure based on Auclert et al. (2021, Econometrica) and example one-asset HANK model from Gregor Boehl see:
# https://github.com/gboehl/econpizza/blob/master/econpizza/examples/hank_with_comments.yml
# SAM extension loosely based on Graves (2025, forthcoming AEJ Macro), Consolo & H채nsel (2024, ECB WP), Dengler & Gehrke (2022, CESifo WP)

---
name: 'hank_sam'
description: 'A one-asset HANK model with SAM labour market frictions'
functions_file: 'hank_sam_functions.py'

globals:
    # Parameters for skill-employment grid
    rho_e : 0.966 # persistence in labour productivity when on a job; as in Auclert et al. (2021, Econometrica)
    sigma_e : 0.5 # variance of shocks to labour productivity when on a job; as in Auclert et al. (2021, Econometrica)
    n_skills : 4 # number of skill grid points excl. unemployment state
    lambda_w_stst : 0.5837 # steady-state job-finding rate (parameter choice explained below)
    sigma_stst : 0.0423 # steady-state job-destruction rate (parameter choice explained below)

definitions: |
    # Imports
    from jax.numpy import log, maximum
    from econpizza.tools import percentile, jax_print

    # Skill-employment grid
    e_grid, e_stationary, e_transition_stst = sam_markov(rho_e, sigma_e, n_skills, lambda_w_stst, sigma_stst) # obtain custom grid
    skills_stationary = e_stationary[1:]/e_stationary[1:].sum() # stationary distribution of skills across employed

# Variables, parameters and shocks
variables: [ B, C, n_eff, R, Rr, Rstar, beta, div, div_L, div_W, lambda_f, lambda_w, mc, n, p_n, pi, tax, theta, u, v, w, W_J, y, y_prod, z ]
parameters: [ epsilon, eta, eps_w, kappa, mu, phi_pi, phi_y, psi, rho, rho_beta, rho_r, rho_z, sigma, sigma_c, xi ]
shocks: [ e_beta, e_rstar, e_z ]

# Skill-asset distribution of households
distributions:
  dist:
    e: # Skill-employment grid
      type: exogenous_generic
      n: n_skills + 1
    a: # Asset grid
      type: endogenous_log
      min: 0.0
      max: 50
      n: 50

# Decision problem of households
decisions:
  inputs: [WaPrime]
  calls: |
    # calculate current transition
    finding_rates = lambda_w * skills_stationary # probabilities of moving out of unemployment into specific skill state
    e_transition = e_transition_stst.at[0,1:].set(finding_rates) # set job-finding rates in transition matrix
    e_transition = e_transition.at[0,0].set(1-lambda_w)
    WaPrimeExp = e_transition @ WaPrime # expected future marginal continuation value

    tfs = jnp.atleast_1d(div - tax) # lump-sum transfers (dividends minus taxes)
    Wa, a, c = egm_step(WaPrimeExp, a_grid, e_grid, w, tfs, xi, Rr, beta, sigma_c) # perform EGM step to update marginal continuation value, asset and consumption demands
  outputs: [a,c,e_transition]

aux_equations: |
    aggr_c = jnp.sum(dist*c, axis=(0,1)) # aggregate consumption demand
    aggr_a = jnp.sum(dist*a, axis=(0,1)) # aggregate net asset demand
    aggr_e = jnp.sum(dist.sum(1)*e_grid[:,None], axis=0) # aggregate skill level
    unemp = get_unemployment(dist) # aggregate unemployment rate

equations:
    # Aggregation
    ~ C = aggr_c # consumption demand
    ~ n_eff = aggr_e # skill level
    ~ u = unemp # unemployment rate

    # Market clearing conditions
    ~ C = y # goods market
    ~ y = (1 - psi*(pi/piSS - 1)**2/2)*y_prod - kappa*v # effective output
    ~ B = aggr_a # asset market

    # Corporate sector
    ~ y_prod = z*n_eff # final-good production
    ~ psi*(pi/piSS - 1)*pi/piSS = (1-epsilon) + epsilon*mc + psi*beta*(piPrime/piSS - 1)*piPrime/piSS*y_prodPrime/y_prod # NKPC
    ~ div_W = (1 - psi*(pi/piSS - 1)**2/2 - mc)*y_prod # dividends by wholesale firms
    ~ div_L = n_eff*(p_n - w) - kappa*v # dividends by labour-services producers; simplified version as in Dengler & Gehrke (2022, CESifo WP)
    ~ div = div_W + div_L # total dividends
    ~ mc*z = p_n # marginal costs

    # Labour market
    ~ n = 1-u # employment
    ~ theta = v/u # labour-market tightness
    ~ W_J = (p_n - w) + beta*(1-sigma)*W_JPrime # vacancy creation; as in Graves (2025, forthcoming AEJ Macro)
    ~ W_JPrime = kappa/(beta*lambda_f) # expected value of a job
    ~ lambda_w = mu*theta**(1-eta) # job-finding rate
    ~ lambda_f = mu*theta**(-eta) # worker-finding rate
    ~ w/wSS = (p_n/p_nSS)**eps_w # ad hoc wage rule; as in appendix J.5 Graves (2025, forthcoming AEJ Macro)

    # Fiscal authority
    ~ tax = (Rr-1)*BSS + xi*u # fiscal budget

    # Monetary authority
    ~ R = (Rstar*((pi/piSS)**phi_pi)*((y/yLag)**phi_y))**(1-rho)*RLag**rho # Taylor rule for gross nominal interest rate
    ~ Rr = RLag/pi # gross ex-post real interest rate

    # Exogenous processes
    ~ beta = betaSS*(betaLag/betaSS)**rho_beta*exp(e_beta) # discount factor shock
    ~ Rstar = RstarSS*(RstarLag/RstarSS)**rho_r*exp(e_rstar) # monetary policy shock
    ~ z = zSS*(zLag/zSS)**rho_z*exp(e_z) # technology shock

steady_state:
    # Fixed steady-state values
    fixed_values:
        y: 1.0 # normalize effective output

        # Household sector
        sigma_c: 2. # inverse of intertemporal elasticity of substitution
        beta: 0.98 # discount factor

        # Corporate sector
        epsilon: 6. # elasticity of substitution; set as in Auclert et al. (2021, Econometrica)
        psi: 60. # parameter on the costs of price adjustment; set as in Auclert et al. (2021, Econometrica)
        mc: (epsilon-1)/epsilon # marginal costs from NKPC and stst inflation equal 1

        # Labour market
        lambda_w: lambda_w_stst # job-finding rate; set to 1-(1-EU_bar)^3 (i.e. quarterly rate), where EU_bar is the mean of the US job-loss rate in 1976:01-2022:12 (data from Shigeru Fujita, Philadelphia Fed)
        sigma: sigma_stst # exogenous job-destruction rate; set to 1-(1-UE_bar)^3 (i.e. quarterly rate), where UE_bar is the mean of the US job-finding rate in 1976:01-2022:12 (data from Shigeru Fujita, Philadelphia Fed)
        mu: 0.65 # matching efficiency; as in Consolo & H채nsel (2024, ECB WP)
        eta: 0.5 # elasticity of matches w.r.t. unemployment; as in Consolo & H채nsel (2024, ECB WP)
        eps_w: 0.45 # elasticity of wages w.r.t. price of labour serives; set as in Graves (2025, forthcoming AEJ Macro)
        w: 0.8 # real wage; must lie below p_n
        u: sigma / (sigma + lambda_w) # unemployment rate
        n: 1.0-u # employment
        n_eff: 1. # labour services

        # Fiscal authority
        B: 5.6 # government bond supply; set as in Auclert et al. (2021, Econometrica)
        xi: 0.4*w # unemployment benefit equals 40% of stst real wage; as in  Consolo & H채nsel (2024, ECB WP) and Shimer (2005, AER)

        # Monetary authority
        pi: 1. # inflation
        rho: 0.8 # persistence in gross nominal interest rate
        phi_pi: 1.5 # Taylor rule coefficient on inflation
        phi_y: 0.1 # Taylor rule coefficient on output

        # Exogenous processes
        rho_beta: 0.9 # persistence of discount factor shock
        rho_r: 0.9 # persistence of monetary policy shock
        rho_z: 0.9 # persistence of technology shocks

    # Initial guesses of steady-state values
    init_guesses:
        Rstar: 1.002 # target interest rate
        Rr: Rstar # gross real interest rate
        R: Rstar # gross nominal interest rate
        tax: 0.028 # tax rate
        div: 0.25 # total dividends
        p_n: mc # price of labour services
        theta: 1. # labour-market tightness
        kappa: 1. # vacancy-posting cost

        WaPrime: egm_init(a_grid, e_stationary) # initialise expected future marginal continuation value
